apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: vpn-gateway
  namespace: networking
spec:
  interval: 5m
  chart:
    spec:
      chart: pod-gateway
      version: 6.5.1
      interval: 15m
      sourceRef:
        kind: HelmRepository
        name: angelnu-helm-charts
        namespace: networking
  #See https://github.com/angelnu/helm-charts/blob/main/charts/apps/pod-gatewa/values.yaml
  values:
    image:
      repository: ghcr.io/angelnu/pod-gateway
      # I am using dev version for testing - others should be using latest
      tag: latest
    webhook:
      image:
        repository: ghcr.io/angelnu/gateway-admision-controller
        # Use dev version
        pullPolicy: Always
        tag: dev
    lifecycle:
      postStart:
        exec:
          command:
            [
              "/bin/sh",
              "-c",
              "(ip rule del table 51820; ip -6 rule del table 51820) || true",
            ]
    service:
      main:
        type: ClusterIP
        clusterIP: None
        ports:
          http:
            port: 4789
            protocol: UDP
      shadowsocks:
        primary: false
        type: LoadBalancer
        externalTrafficPolicy: Cluster
        annotations:
          external-dns.alpha.kubernetes.io/hostname: ${VPN_SERVICE_PROVIDER}.${SECRET_DOMAIN}
        ports:
          shadowsocks-udp:
            port: 8388
            protocol: UDP
          shadowsocks-tcp:
            port: 8388
            protocol: TCP

    addons:
      vpn:
        enabled: true
        type: gluetun
        gluetun:
          image:
            repository: docker.io/qmcgaw/gluetun
            tag: latest
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
            add:
              - NET_RAW
              - NET_ADMIN

        resources:
          limits:
            squat.ai/tun: "1"
        env:
          - name: VPN_SERVICE_PROVIDER
            value: ${VPN_SERVICE_PROVIDER}
          - name: VPN_TYPE
            value: wireguard
          - name: VPN_INTERFACE
            value: wg0
          - name: FIREWALL
            value: "off"
          - name: DOT
            value: "off"
          - name: SERVER_COUNTRIES
            value: ${VPN_SERVER_COUNTRIES}
          - name: SHADOWSOCKS
            value: "on"
          - name: PUBLICIP_ENABLED
            value: "false"

        envFrom:
          - secretRef:
              name: ${VPN_SERVICE_PROVIDER}

        livenessProbe:
          exec:
            command:
              - sh
              - -c
              - if [ $(wget -q -O- https://ipinfo.io/country) == '$${VPN_COUNTRY_CODE}' ]; then exit 0; else exit $?; fi
          initialDelaySeconds: 30
          periodSeconds: 60
          failureThreshold: 3

        networkPolicy:
          enabled: true

          egress:
            - to:
                - ipBlock:
                    cidr: 0.0.0.0/0
              ports:
                # VPN traffic
                - port: &vpn_port 1637
                  protocol: UDP
            - to:
                - ipBlock:
                    cidr: 10.0.0.0/8

    routed_namespaces:
      - vpn

    settings:
      # -- If using a VPN, interface name created by it
      VPN_INTERFACE: wg0
      # -- Prevent non VPN traffic to leave the gateway
      VPN_BLOCK_OTHER_TRAFFIC: true
      # -- If VPN_BLOCK_OTHER_TRAFFIC is true, allow VPN traffic over this port
      VPN_TRAFFIC_PORT: *vpn_port
      # -- Traffic to these IPs will be send through the K8S gateway
      VPN_LOCAL_CIDRS: "10.0.0.0/8 192.168.0.0/16"

    # -- settings to expose ports, usually through a VPN provider.
    # NOTE: if you change it you will need to manually restart the gateway POD
    publicPorts:
      - hostname: qbittorrent
        IP: 10
        ports:
          - type: udp
            port: ${VPN_FORWARDED_PORT}
          - type: tcp
            port: ${VPN_FORWARDED_PORT}
