---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: minecraft
spec:
  interval: 60m
  timeout: 15m
  chart:
    spec:
      chart: minecraft-bedrock
      version: 2.6.0
      sourceRef:
        kind: HelmRepository
        name: itzg-minecraft-server-charts
        namespace: games
      interval: 60m
  dependsOn:
    - name: cilium
      namespace: kube-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  # Values link: https://github.com/itzg/minecraft-server-charts/blob/master/charts/minecraft-bedrock/values.yaml
  values:
    # ref: https://hub.docker.com/r/itzg/minecraft-server/
    image:
      repository: itzg/minecraft-bedrock-server
      tag: latest

    ## Configure resource requests and limits
    ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
    ##
    resources:
      requests:
        memory: 1024Mi
        cpu: 1000m

    # upgrade strategy type (e.g. Recreate or RollingUpdate)
    strategyType: Recreate

    nodeSelector:
      kubernetes.io/arch: amd64

    tolerations: []

    affinity: {}

    # Most of these map to environment variables. See Minecraft for details:
    # https://hub.docker.com/r/itzg/minecraft-server/
    livenessProbe:
      initialDelaySeconds: 30
    readinessProbe:
      initialDelaySeconds: 30

    # initContainers:
    #   - name: do-something
    #     image: busybox
    #     command: ['do', 'something']
    #     volumesMounts:
    #       - name: nfs
    #         mountPath: /mnt/volume
    #         readOnly: true
    initContainers: []

    # extraVolumes:
    #   - volumeMounts:
    #       - name: nfs
    #         mountPath: /mnt/volume
    #         readOnly: true
    #     volumes:
    #       - name: nfs
    #         server: some.nfs.server.com
    #         path: /
    #         mountOptions:
    #           - port=2049
    #           - hard
    #           - vers=4
    extraVolumes: []

    minecraftServer:
      # This must be overridden, since we can't accept this for the user.
      eula: "TRUE"
      # One of: LATEST, SNAPSHOT, or a specific version (ie: "1.7.9").
      version: "LATEST"
      # One of: peaceful, easy, normal, and hard
      difficulty: peaceful
      # A boolean to indicate if whitelist is enabled or not. If this is enabled
      # and whitelistUsers is left blank, you will need to provide the whitelist.json
      # file via the volume mounted in to the container. Setting whitelistUsers implies
      # whitelist is true, so it is not necessary to set it.
      whitelist:
      # A comma-separated list of player names to whitelist with no whitespace.
      # ex: whitelistUsers: player1,player2,player3
      whitelistUsers:
      # A comma-seperated list of xuid's for operators on server with no
      # whitespaces.
      # The server logs will print xuids as players connect.
      # ex: ops: "12345678,0987654"
      ops:
      # A comma-seperated list of xuid's for members on server with no
      # whitespaces.
      # ex: ops: "12345678,0987654"
      members:
      # A comma-seperated list of xuid's for visitors on server with no
      # whitespaces.
      # ex: ops: "12345678,0987654"
      visitors:
      # Max connected players.
      maxPlayers: 5
      # The world is ticked this many chunks away from any player.
      tickDistance: 4
      # Max view distance (in chunks).
      viewDistance: 10
      # The "level-name" value is used as the world name and its folder name. The player may also copy their saved game folder here, and change the name to the same as that folder's to load it instead.
      levelName: "ZooHelm"
      # Define this if you want a specific map generation seed.
      levelSeed: -365
      # One of: creative, survival, adventure, spectator
      gameMode: creative
      # Permission level for new players joining for the first time (visitor, member, operator)
      defaultPermission: member
      # After a player has idled for this many minutes they get kicked.
      playerIdleTimeout: 30
      # One of: DEFAULT, FLAT, LEGACY
      levelType: DEFAULT
      # Force clients to use texture packs in the current world
      texturepackRequired: false
      # This is the server name shown in the in-game server list.
      serverName: "ZooCraft"
      # Check accounts against Minecraft account service.
      onlineMode: false
      # Maximum number of threads the server tries to use. If set to 0 or removed then it uses as many as possible.
      maxThreads: 8
      # Cheat like commands can be used.
      cheats: true
      # type of kubernetes service to use
      serviceType: LoadBalancer
      ## Set the port used if the serviceType is NodePort
      loadBalancerIP: ${LB_CIDR_MINECRAFT_V4}
      # loadBalancerSourceRanges: []
      ## Set the externalTrafficPolicy in the Service to either Cluster or Local
      externalTrafficPolicy: Cluster

    ## Additional minecraft container environment variables
    ## Values can be either variable values or `valueFrom` yaml
    ##
    extraEnv:
      {}
      # some_variable: some value
      # another_variable:
      #   valueFrom:
      #     fieldRef:
      #       fieldPath: status.hostIP

    ## Additional environment variables to add to the minecraft container from
    ## ConfigMaps and Secrets
    ##
    envFrom: []

    persistence:
      ## minecraft data Persistent Volume Storage Class
      ## If defined, storageClassName: <storageClass>
      ## If set to "-", storageClassName: "", which disables dynamic provisioning
      ## If undefined (the default) or set to null, no storageClassName spec is
      ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
      ##   GKE, AWS & OpenStack)
      ##
      # storageClass: "-"
      storageClass: nfs-csi
      dataDir:
        enabled: true
        size: 1Gi

    podAnnotations: {}

    deploymentAnnotations: {}
