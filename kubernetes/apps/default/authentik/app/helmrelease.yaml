---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: authentik
  namespace: default
spec:
  interval: 30m
  chart:
    spec:
      chart: authentik
      version: 2024.2.2
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: authentik
        namespace: default
  install:
    remediation:
      retries: 5
  timeout: 15m
  upgrade:
    remediation:
      retries: 5
  values:
    global:
      deploymentAnnotations:
        secret.reloader.stakater.com/reload: authentik-secret,authentik-redis-secret
      env:
        - name: AUTHENTIK_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: authentik-secret
              key: AUTHENTIK_SECRET_KEY
        - name: AUTHENTIK_POSTGRESQL__HOST
          valueFrom:
            secretKeyRef:
              name: authentik-secret
              key: AUTHENTIK_POSTGRESQL__HOST
        - name: AUTHENTIK_POSTGRESQL__NAME
          valueFrom:
            secretKeyRef:
              name: authentik-secret
              key: AUTHENTIK_POSTGRESQL__NAME
        - name: AUTHENTIK_POSTGRESQL__USER
          valueFrom:
            secretKeyRef:
              name: authentik-secret
              key: AUTHENTIK_POSTGRESQL__USER
        - name: AUTHENTIK_POSTGRESQL__PASSWORD
          valueFrom:
            secretKeyRef:
              name: authentik-secret
              key: AUTHENTIK_POSTGRESQL__PASSWORD
        - name: AUTHENTIK_BOOTSTRAP_TOKEN
          valueFrom:
            secretKeyRef:
              name: authentik-secret
              key: AUTHENTIK_BOOTSTRAP_TOKEN
        - name: AUTHENTIK_BOOTSTRAP_PASSWORD
          valueFrom:
            secretKeyRef:
              name: authentik-secret
              key: AUTHENTIK_BOOTSTRAP_PASSWORD
    authentik:
      log_level: info
      email:
        enabled: false
      error_reporting:
        enabled: false
        send_pii: false
      redis:
        host: "dragonfly.database.svc.cluster.local."

    server:
      initContainers:
        - name: init-db
          image: ghcr.io/onedr0p/postgres-init:16.2
          imagePullPolicy: IfNotPresent
          envFrom:
            - secretRef:
                name: authentik-secret

      ingress:
        enabled: true
        ingressClassName: external
        annotations:
          nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
          nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
        hosts:
          - &host auth.${SECRET_DOMAIN}
        paths:
          - /
        pathType: Prefix
        tls:
          - hosts:
              - *host
      resources:
        requests:
          cpu: 100m
          memory: 512Mi
        limits:
          memory: 512Mi
      startupProbe:
        periodSeconds: 10
      metrics:
        serviceMonitor:
          enabled: true
      prometheus:
        rules:
          enabled: true

    postgresql:
      enabled: false

    redis:
      enabled: false
