---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/postgresql.cnpg.io/cluster_v1.json
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: immich-database
  namespace: default
spec:
  instances: 3
  postgresql:
    shared_preload_libraries:
      - "vectors.so"
    parameters:
      max_connections: "300"
      shared_buffers: 512MB
  imageName: ghcr.io/tensorchord/cloudnative-pgvecto.rs:16-v0.2.1
  affinity:
    nodeSelector:
      # use all the same arch
      kubernetes.io/arch: amd64

  primaryUpdateStrategy: unsupervised
  storage:
    size: 10Gi
    storageClass: openebs-hostpath
  nodeMaintenanceWindow:
    inProgress: false
    reusePVC: true
  resources:
    requests:
      cpu: 500m
    limits:
      memory: 2Gi
  enableSuperuserAccess: true
  monitoring:
    enablePodMonitor: true
    # Ref: https://github.com/cloudnative-pg/cloudnative-pg/issues/2501
    podMonitorMetricRelabelings:
      - {
          sourceLabels: ["cluster"],
          targetLabel: cnpg_cluster,
          action: replace,
        }
      - { regex: cluster, action: labeldrop }
  bootstrap:
    initdb:
      database: immich
      postInitApplicationSQL:
        - CREATE EXTENSION IF NOT EXISTS "vectors";
        - CREATE EXTENSION IF NOT EXISTS "vector";
        - CREATE EXTENSION IF NOT EXISTS "cube";
        - CREATE EXTENSION IF NOT EXISTS "earthdistance" CASCADE;
        # needed per https://github.com/tensorchord/pgvecto.rs/issues/385#issuecomment-1963823750
        - ALTER DATABASE immich SET search_path TO "$user", public, vectors;
        - ALTER SCHEMA vectors OWNER TO "immich";
        - GRANT SELECT ON TABLE pg_vector_index_stat to immich;
      owner: immich
      dataChecksums: true
      encoding: "UTF8"
  backup:
    retentionPolicy: 30d
    barmanObjectStore:
      wal:
        compression: bzip2
        maxParallel: 2
      destinationPath: s3://databases/
      endpointURL: https://s3.${SECRET_DOMAIN}
      serverName: immich-v1
      s3Credentials:
        accessKeyId:
          name: minio-immich-pgsql
          key: minio_s3_access_key
        secretAccessKey:
          name: minio-immich-pgsql
          key: minio_s3_secret_access_key
