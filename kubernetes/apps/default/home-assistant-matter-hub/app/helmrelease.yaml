---
# yaml-language-server: $schema=https://kubernetes-schemas.dmfrey.com/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app home-assistant-matter-hub
spec:
  interval: 10m

  chart:
    spec:
      chart: app-template
      version: 3.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system

  maxHistory: 2

  install:
    createNamespace: true
    remediation:
      retries: 3

  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3

  uninstall:
    keepHistory: false

  values:
    controllers:
      *app :
        type: statefulset

        annotations:
          reloader.stakater.com/auto: "true"
          secret.reloader.stakater.com/reload: &secret home-assistant-matter-hub-secret

        containers:
          *app :
            image:
              repository: ghcr.io/t0bst4r/home-assistant-matter-hub
              tag: 3.0.0-alpha.22@sha256:b7027484a6baddf4936cc1185abb518f1db47b0c96d2847e2842980d68b7a5cc

            env:
              TZ: ${TIMEZONE}
              HAMH_LOG_LEVEL: debug
              HAMH_WEB_PORT: &port 8482
              HAMH_STORAGE_LOCATION: /data
              HAMH_MDNS_NETWORK_INTERFACE: enp2s0.50

            envFrom:
              - secretRef:
                  name: *secret

            probes:
              liveness:
                enabled: false
              readiness:
                enabled: false
              startup:
                enabled: false

            securityContext:
              readOnlyRootFilesystem: false
              capabilities: { drop: ["ALL"] }

        pod:
          annotations:
            k8s.v1.cni.cncf.io/networks: |
              [{
                "name":"iot-vlan",
                "namespace": "network",
                "ips": ["${IOT_CIDR}"],
                # printf '02:00:00:%02X:%02X:%02X\n' $((RANDOM%256)) $((RANDOM%256)) $((RANDOM%256))
                # 02 indicates a locally administered address
                "mac": "02:00:00:B5:46:C3", # randomly generated
                "gateway": ["${IOT_GATEWAY}"]
              }]

    defaultPodOptions:
      hostNetwork: true
      hostPID: true
      securityContext:
        runAsNonRoot: false
        runAsUser: 0
        runAsGroup: 0
        fsGroup: 0
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }

    service:
      *app :
        controller: *app
        ports:
          http:
            port: *port

    ingress:
      internal:
        enabled: true
        className: internal
        annotations:
          nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
          nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
          nginx.org/websocket-services: matterhub
          hajimari.io/enable: "true"
          hajimari.io/icon: "simple-icons:matterdotjs"
          external-dns.alpha.kubernetes.io/hostname: internal.${SECRET_DOMAIN}
        hosts:
          - host: matterhub.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: *app
                  port: http

    persistence:
      storageClass: nfs-csi
      data:
        enabled: true
        size: 1Gi

      tmp:
        type: emptyDir
        medium: Memory
        globalMounts:
          - path: /tmp
